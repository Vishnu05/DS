diff b/w complie time and runtime ?

‏
what is abstract ? ?
noun- summary, synopsyis

high leval language and low leval language?

human readable,natural language, easy to learn code and debug,
slow when compared to ll lang, interpter and compiler

low leval lang- binary language(machine language) 0 and's 1, assembly language
hard to learn,compile and debug.
but its is damm fast than high leval language it is directly connected with motherborad
‎

what is object?

 an object can be a variable, a data structure, a function, or a method, and as such, is a value in memory referenced by an identifier
objects has state and behaviour state are feilds(datatypes) and behaviour are methods

A program written in high leval language are called source code
A compiler and interpeter is a program used to convert high leval lang into MACHINE leval language for understanding the processor
windows + intel =processor -this only runs the machine code

complier will convert the source code into object code - code produced by compiler or assembler

parsing ??
computer text or string which is more readable and understandable to human xml json(Still not clear need to read it again)(Structure)

preprocessor ?
#include <?>filename this will first load ex iostream for i/o (need to read deep)

lexical analysis?

jvm Java virtual machine

jit (Just in time compiler) - It makes java to perform high
java source code will be converted into .class file with help of jvm
the byte code will be converted into machine code with help of JIT compiler

compiler and interpeter
compiler will convert the high leval language into byte code
interpeter(it a program)- will convert byte code to machine code

Run time interpreter

class loader--> Byte code verifer --> engine (machine binary code)

Local variables − Variables defined inside methods, constructors or blocks are called local variables.
The variable will be declared and initialized within the method and the variable will be destroyed when the method has completed.

Instance variables − Instance variables are variables within a class but outside any method.
These variables are initialized when the class is instantiated.
Instance variables can be accessed from inside any method, constructor or blocks of that particular class. can be accessed within the class

Class variables − Class variables are variables declared within a class, outside any method, with the static keyword.

Constructor-IN java there will be a default constructor , Constructors do not have return type (why ?), it cannot be final,abstract,static
The name of the const will be same as class name, if we do not create const then it is explictly created by java
every class has a constructor
Each time a new object is created, at least one constructor will be invoked
new keyword-used to create a new object

Declaration − A variable declaration with a variable name with an object type.

Instantiation − The 'new' keyword is used to create the object.

Initialization − The 'new' keyword is followed by a call to a constructor. This call initializes the new object.

Append- add something end of document (like concatination)

in java everything is a object

Architecture-neutral − Java compiler generates an architecture-neutral object file format,
which makes the compiled code executable on many processors, with the presence of Java runtime system.

java multithreading,platform independent, object oriented,secured

method- in a class we can have any number of methods we can write the logics and solve the problem

java identifer- The name of the class name,variable, method always should start with letter and some common things
no numbers, and specifed special charecter are not allowed

invoke ? calling a function (but there is lot more in this)

50 reserved keyword as i studied (may be more or less check it again)

Enums--?

final keyword for declaration used to the  variable connot be changed throughout the class

Modifiers - Accessable - private, public, protected
Non Accessable -final , abstract, strictfc?????

Inheritance- Superclass and subclass  (classes can be derived from classes)
if you need to create a new class and here is already a class that has some of the code you require,
then it is possible to derive your new class from the already existing code.
The concept of reusing the feilds and method of a exsiting class without having to rewrite the code in new class

Interface-

super and this keyword ???

instance of class??


c++
jdk,jvm,jre,
operator
precedence
oops concepts
new
static ,this
abstarct class
encap packaging
excpetion handing
thread
inner genric values
java array
java string


Variables- 8 types of data types
primitive and non privitive data types
When we decalre the data types the memory is allocated to the variable


